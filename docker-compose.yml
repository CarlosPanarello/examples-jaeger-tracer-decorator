version: '3'
services:
  jaeger:
    image: jaegertracing/all-in-one:1.8
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - jaeger-net
    expose:
      - "9411"
      - "16686"
      - "6832/udp"
      - "5775/udp"
      - "6831/udp"
      - "5778"
      - "14268"
    ports:
      - "9411:9411"
      - "16686:16686"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14268:14268"  
  app-basic-js:
    image: app-basic-js
    build:
      context: ./Basic-JS/
      dockerfile: ./dockerfile
    command: 'npm run start'
    environment:
      JAEGER_SERVICE_NAME: "Basic-JS"
      JAEGER_SERVICE_VERSION: "1.0.0"
      JAEGER_SAMPLER_TYPE: "probabilistic"
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_REPORTER_LOG_SPANS: "true"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    volumes:
      - ./Basic-JS:/app
    networks:
      - jaeger-net
    ports:
      - "9201:9201"
  app-basic-ts:
    image: app-basic-ts
    build:
      context: ./Basic-TS/
      dockerfile: ./dockerfile
    command: 'npm run start'
    environment:
      JAEGER_SERVICE_NAME: "Basic-TS"
      JAEGER_SERVICE_VERSION: "1.0.0"
      JAEGER_SAMPLER_TYPE: "probabilistic"
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_REPORTER_LOG_SPANS: "true"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    volumes:
      - ./Basic-TS:/app
    networks:
      - jaeger-net
    ports:
      - "9202:9202"
  app-express-js:
    image: app-express-js
    build:
      context: ./Express-JS/
      dockerfile: ./dockerfile
    command: 'npm run start'
    environment:
      JAEGER_SERVICE_NAME: "Express-JS"
      JAEGER_SERVICE_VERSION: "1.0.0"
      JAEGER_SAMPLER_TYPE: "probabilistic"
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_REPORTER_LOG_SPANS: "true"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    volumes:
      - ./Express-JS:/app
    networks:
      - jaeger-net
    ports:
      - "4001:4001"      
      - "9203:9203"   
  app-express-ts:
    image: app-express-ts
    build:
      context: ./Express-TS/
      dockerfile: ./dockerfile
    command: 'npm run start'
    environment:
      JAEGER_SERVICE_NAME: "Express-TS"
      JAEGER_SERVICE_VERSION: "1.0.0"
      JAEGER_SAMPLER_TYPE: "probabilistic"
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_REPORTER_LOG_SPANS: "true"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    volumes:
      - ./Express-TS:/app
    networks:
      - jaeger-net
    ports:
      - "4002:4002"      
      - "9204:9204"           
  app-restify-js:
    image: app-restify-js
    build:
      context: ./Restify-JS/
      dockerfile: ./dockerfile
    command: 'npm run start'
    environment:
      JAEGER_SERVICE_NAME: "Restify-JS"
      JAEGER_SERVICE_VERSION: "1.0.0"
      JAEGER_SAMPLER_TYPE: "probabilistic"
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_REPORTER_LOG_SPANS: "true"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    volumes:
      - ./Restify-JS:/app
    networks:
      - jaeger-net
    ports:
      - "3001:3001"      
      - "9205:9205"   
  app-restify-ts:
    image: app-restify-ts
    build:
      context: ./Restify-TS/
      dockerfile: ./dockerfile
    command: 'npm run start'
    environment:
      JAEGER_SERVICE_NAME: "Restify-TS"
      JAEGER_SERVICE_VERSION: "1.0.0"
      JAEGER_SAMPLER_TYPE: "probabilistic"
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_REPORTER_LOG_SPANS: "true"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6832
    volumes:
      - ./Restify-TS:/app
    networks:
      - jaeger-net
    ports:
      - "3002:3002"      
      - "9206:9206"   
networks: 
  jaeger-net: 
    driver: bridge
    ipam: 
      config: 
      - subnet: 192.128.128.0/24